싱글쓰레드 - 일꾼 1명
함수가 실행 부분 - 호출 스택

동기식
 - 실행순서와 결과가 동일하게 나오는
 A -> B-> C 결과 A-> B -> C

비동기식(쓰레드에서 순서대로 받아서 백그라운드로 보내서 빨리되는것부터 실행~!)
-실행은 순서대로 실행 -> 결과는 처리되는대로 나오는 방식
A -> -> ->C 결과는 처리되는대로 (순서의 보장 X)

예) 회원가입 -> 자동 로그인
: 로그인 -> 회원가입 <비동기 일때 실행>
 가벼운것   무거운것

 비동기 순차실행
 1.함수안에 인수로 실행 -> 콜백 방식

콜백이 많아지면 중첩이 많아진다
    -가독성 X
    -유지보수가 어렵다.
    -콜백지옥
        외면받음....
es6+(2015) 이후로 개선
    -promise 생성자
    -비동기 순차실행의 콜백 중첩을 어느정도 해결

    const promise = new Promise(function(resolve, reject) {
        // resolve - 개발자가 로직이 성공했다고 생각하는 부분에 호출
    })

    const promise = new Promise(function(resolve, reject) {
        // reject   - 개발자가 로직이 실패 했다고 생각하는 부분에 호출
    })


     promise
      .then(function(data))